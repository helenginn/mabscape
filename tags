!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
MOUSE_SENSITIVITY	libsrc/SlipGL.cpp	28;"	d	file:
PAN_SENSITIVITY	libsrc/SurfaceView.cpp	19;"	d	file:
START_Z	libsrc/SlipGL.cpp	29;"	d	file:
SlipGL	libsrc/SlipGL.cpp	/^SlipGL::SlipGL(QWidget *p) : QOpenGLWidget(p)$/;"	f	class:SlipGL
SlipGL	libsrc/SlipGL.h	/^class SlipGL : public QOpenGLWidget, QOpenGLFunctions$/;"	c
SlipObjFile	libsrc/SlipObjFile.cpp	/^SlipObjFile::SlipObjFile(std::string filename) : SlipObject()$/;"	f	class:SlipObjFile
SlipObjFile	libsrc/SlipObjFile.h	/^class SlipObjFile : public SlipObject$/;"	c
SlipObject	libsrc/SlipObject.cpp	/^SlipObject::SlipObject()$/;"	f	class:SlipObject
SlipObject	libsrc/SlipObject.h	/^class SlipObject : public QOpenGLFunctions$/;"	c
SlipPanel	libsrc/SlipPanel.cpp	/^SlipPanel::SlipPanel(vec3 x1, vec3 x2, vec3 x3) : SlipObject()$/;"	f	class:SlipPanel
SlipPanel	libsrc/SlipPanel.h	/^class SlipPanel : public SlipObject$/;"	c
Structure	libsrc/Structure.cpp	/^Structure::Structure(std::string filename) : SlipObjFile(filename)$/;"	f	class:Structure
Structure	libsrc/Structure.h	/^class Structure : public SlipObjFile$/;"	c
SurfaceView	libsrc/SurfaceView.cpp	/^SurfaceView::SurfaceView(QWidget *p) : QMainWindow(p)$/;"	f	class:SurfaceView
SurfaceView	libsrc/SurfaceView.h	/^class SurfaceView : public QMainWindow$/;"	c
Vertex	libsrc/SlipObject.h	/^} Vertex;$/;"	t	typeref:struct:__anon1
__Blot__Image_fsh__	libsrc/shaders/fImage.h	2;"	d
__Blot__Image_vsh__	libsrc/shaders/vImage.h	2;"	d
__Blot__Wipe_fsh__	libsrc/shaders/fWipe.h	2;"	d
__Slip_SlipObject__	libsrc/SlipObject.h	20;"	d
__Slip__SlipGL__	libsrc/SlipGL.h	20;"	d
__Slip__SlipPanel__	libsrc/SlipPanel.h	20;"	d
__abmap__SlipObjFile__	libsrc/SlipObjFile.h	20;"	d
__abmap__Structure__	libsrc/Structure.h	20;"	d
__abmap__SurfaceView__	libsrc/SurfaceView.h	20;"	d
_activeObj	libsrc/SlipGL.h	/^	SlipObject *_activeObj;$/;"	m	class:SlipGL
_bufferID	libsrc/SlipObject.h	/^	GLuint _bufferID;$/;"	m	class:SlipObject
_camAlpha	libsrc/SlipGL.h	/^	float _camAlpha, _camBeta, _camGamma;$/;"	m	class:SlipGL
_camBeta	libsrc/SlipGL.h	/^	float _camAlpha, _camBeta, _camGamma;$/;"	m	class:SlipGL
_camGamma	libsrc/SlipGL.h	/^	float _camAlpha, _camBeta, _camGamma;$/;"	m	class:SlipGL
_centre	libsrc/SlipGL.h	/^	vec3 _centre;$/;"	m	class:SlipGL
_controlPressed	libsrc/SurfaceView.h	/^	bool _controlPressed;$/;"	m	class:SurfaceView
_d	libsrc/SlipGL.h	/^	struct detector *_d;$/;"	m	class:SlipGL	typeref:struct:SlipGL::detector
_disabled	libsrc/SlipObject.h	/^	bool _disabled;$/;"	m	class:SlipObject
_extra	libsrc/SlipObject.h	/^	bool _extra;$/;"	m	class:SlipObject
_filename	libsrc/SlipObjFile.h	/^	std::string _filename;$/;"	m	class:SlipObjFile
_gl	libsrc/SurfaceView.h	/^	SlipGL *_gl;$/;"	m	class:SurfaceView
_indices	libsrc/SlipObject.h	/^	std::vector<GLuint> _indices;$/;"	m	class:SlipObject
_lastX	libsrc/SurfaceView.h	/^	double _lastX; double _lastY;$/;"	m	class:SurfaceView
_lastY	libsrc/SurfaceView.h	/^	double _lastX; double _lastY;$/;"	m	class:SurfaceView
_model	libsrc/SlipGL.h	/^	mat4x4 _model;$/;"	m	class:SlipGL
_mouseButton	libsrc/SurfaceView.h	/^	Qt::MouseButton _mouseButton;$/;"	m	class:SurfaceView
_moving	libsrc/SurfaceView.h	/^	bool _moving;$/;"	m	class:SurfaceView
_objects	libsrc/SlipGL.h	/^	std::vector<SlipObject *> _objects;$/;"	m	class:SlipGL
_program	libsrc/SlipObject.h	/^	GLuint _program;$/;"	m	class:SlipObject
_proj	libsrc/SlipGL.h	/^	mat4x4 _proj;$/;"	m	class:SlipGL
_random	libsrc/SlipObject.h	/^	std::string _random;$/;"	m	class:SlipObject
_renderType	libsrc/SlipObject.h	/^	GLuint _renderType;$/;"	m	class:SlipObject
_shiftPressed	libsrc/SurfaceView.h	/^	bool _shiftPressed;$/;"	m	class:SurfaceView
_textures	libsrc/SlipObject.h	/^	std::vector<GLuint> _textures;$/;"	m	class:SlipObject
_totalCentroid	libsrc/SlipGL.h	/^	vec3 _totalCentroid;$/;"	m	class:SlipGL
_transOnly	libsrc/SlipGL.h	/^	vec3 _transOnly;$/;"	m	class:SlipGL
_translation	libsrc/SlipGL.h	/^	vec3 _translation;$/;"	m	class:SlipGL
_uModel	libsrc/SlipObject.h	/^	GLuint _uModel;$/;"	m	class:SlipObject
_uProj	libsrc/SlipObject.h	/^	GLuint _uProj;$/;"	m	class:SlipObject
_vbo	libsrc/SlipObject.h	/^	GLuint _vbo;$/;"	m	class:SlipObject
_vertices	libsrc/SlipObject.h	/^	std::vector<Vertex> _vertices;$/;"	m	class:SlipObject
activeObject	libsrc/SlipGL.h	/^	SlipObject *activeObject()$/;"	f	class:SlipGL
addIndex	libsrc/SlipObject.cpp	/^void SlipObject::addIndex(GLuint i)$/;"	f	class:SlipObject
addObject	libsrc/SlipGL.cpp	/^void SlipGL::addObject(SlipObject *obj, bool active)$/;"	f	class:SlipGL
addPanel	libsrc/SlipGL.cpp	/^void SlipGL::addPanel()$/;"	f	class:SlipGL
addShaderFromString	libsrc/SlipObject.cpp	/^GLuint SlipObject::addShaderFromString(GLuint program, GLenum type, $/;"	f	class:SlipObject
addToVertices	libsrc/SlipObject.cpp	/^void SlipObject::addToVertices(float x, float y)$/;"	f	class:SlipObject
addVertex	libsrc/SlipObject.cpp	/^void SlipObject::addVertex(float v1, float v2, float v3)$/;"	f	class:SlipObject
bindTextures	libsrc/SlipObject.cpp	/^void SlipObject::bindTextures()$/;"	f	class:SlipObject
centroid	libsrc/SlipObject.cpp	/^vec3 SlipObject::centroid()$/;"	f	class:SlipObject
changeProgram	libsrc/SlipObject.cpp	/^void SlipObject::changeProgram(std::string &v, std::string &f)$/;"	f	class:SlipObject
checkErrors	libsrc/SlipObject.cpp	/^void SlipObject::checkErrors()$/;"	f	class:SlipObject
color	libsrc/SlipObject.h	/^	GLfloat color[4];$/;"	m	struct:__anon1
convertCoords	libsrc/SurfaceView.cpp	/^void SurfaceView::convertCoords(double *x, double *y)$/;"	f	class:SurfaceView
deletePrograms	libsrc/SlipObject.cpp	/^void SlipObject::deletePrograms()$/;"	f	class:SlipObject
draggedLeftMouse	libsrc/SlipGL.cpp	/^void SlipGL::draggedLeftMouse(double x, double y)$/;"	f	class:SlipGL
draggedRightMouse	libsrc/SlipGL.cpp	/^void SlipGL::draggedRightMouse(double x, double y)$/;"	f	class:SlipGL
extra	libsrc/SlipObject.h	/^	GLfloat extra[4];$/;"	m	struct:__anon1
fImage	libsrc/shaders/fImage.h	/^std::string fImage =$/;"	v
fWipe	libsrc/shaders/fWipe.h	/^std::string fWipe =$/;"	v
getModel	libsrc/SlipGL.h	/^	mat4x4 getModel()$/;"	f	class:SlipGL
getProjection	libsrc/SlipGL.h	/^	mat4x4 getProjection()$/;"	f	class:SlipGL
iPointer	libsrc/SlipObject.h	/^	GLuint *iPointer()$/;"	f	class:SlipObject
iSize	libsrc/SlipObject.h	/^	size_t iSize()$/;"	f	class:SlipObject
indexCount	libsrc/SlipObject.h	/^	size_t indexCount()$/;"	f	class:SlipObject
initialisePrograms	libsrc/SlipGL.cpp	/^void SlipGL::initialisePrograms()$/;"	f	class:SlipGL
initialisePrograms	libsrc/SlipObject.cpp	/^void SlipObject::initialisePrograms(std::string *v, std::string *f)$/;"	f	class:SlipObject
initializeGL	libsrc/SlipGL.cpp	/^void SlipGL::initializeGL()$/;"	f	class:SlipGL
isCovered	libsrc/SlipObject.cpp	/^bool SlipObject::isCovered(double x, double y)$/;"	f	class:SlipObject
isDisabled	libsrc/SlipObject.h	/^	bool isDisabled()$/;"	f	class:SlipObject
keyPressEvent	libsrc/SurfaceView.cpp	/^void SurfaceView::keyPressEvent(QKeyEvent *event)$/;"	f	class:SurfaceView
keyReleaseEvent	libsrc/SurfaceView.cpp	/^void SurfaceView::keyReleaseEvent(QKeyEvent *event)$/;"	f	class:SurfaceView
loadStructure	libsrc/SurfaceView.cpp	/^void SurfaceView::loadStructure(std::string filename)$/;"	f	class:SurfaceView
main	libsrc/main.cpp	/^int main(int argc, char * argv[])$/;"	f
makeDummy	libsrc/SlipObject.cpp	/^void SlipObject::makeDummy()$/;"	f	class:SlipObject
midpoint	libsrc/SlipObject.cpp	/^void SlipObject::midpoint(double *x, double *y)$/;"	f	class:SlipObject
mouseMoveEvent	libsrc/SurfaceView.cpp	/^void SurfaceView::mouseMoveEvent(QMouseEvent *e)$/;"	f	class:SurfaceView
mousePressEvent	libsrc/SurfaceView.cpp	/^void SurfaceView::mousePressEvent(QMouseEvent *e)$/;"	f	class:SurfaceView
mouseReleaseEvent	libsrc/SurfaceView.cpp	/^void SurfaceView::mouseReleaseEvent(QMouseEvent *e)$/;"	f	class:SurfaceView
normal	libsrc/SlipObject.h	/^	GLfloat normal[3];$/;"	m	struct:__anon1
paintGL	libsrc/SlipGL.cpp	/^void SlipGL::paintGL()$/;"	f	class:SlipGL
panned	libsrc/SlipGL.cpp	/^void SlipGL::panned(double x, double y)$/;"	f	class:SlipGL
pos	libsrc/SlipObject.h	/^	GLfloat pos[3];$/;"	m	struct:__anon1
preparePanels	libsrc/SlipGL.cpp	/^void SlipGL::preparePanels(int n)$/;"	f	class:SlipGL
readInput	libsrc/SlipObjFile.cpp	/^void SlipObjFile::readInput()$/;"	f	class:SlipObjFile
rebindProgram	libsrc/SlipObject.cpp	/^void SlipObject::rebindProgram()$/;"	f	class:SlipObject
render	libsrc/SlipObject.cpp	/^void SlipObject::render(SlipGL *sender)$/;"	f	class:SlipObject
resizeEvent	libsrc/SurfaceView.cpp	/^void SurfaceView::resizeEvent(QResizeEvent *event)$/;"	f	class:SurfaceView
rotateVertices	libsrc/SlipObject.cpp	/^void SlipObject::rotateVertices(double angle)$/;"	f	class:SlipObject
select	libsrc/SlipObject.cpp	/^void SlipObject::select(bool sel, double red, double green, double blue)$/;"	f	class:SlipObject
setDisabled	libsrc/SlipObject.cpp	/^void SlipObject::setDisabled(bool dis)$/;"	f	class:SlipObject
setVertices	libsrc/SlipObject.cpp	/^void SlipObject::setVertices(float t, float b, float l, float r)$/;"	f	class:SlipObject
setZCoord	libsrc/SlipObject.cpp	/^void SlipObject::setZCoord(float z)$/;"	f	class:SlipObject
setupCamera	libsrc/SlipGL.cpp	/^void SlipGL::setupCamera()$/;"	f	class:SlipGL
setupVertices	libsrc/SlipPanel.cpp	/^void SlipPanel::setupVertices(vec3 x1, vec3 x2, vec3 x3)$/;"	f	class:SlipPanel
tex	libsrc/SlipObject.h	/^	GLfloat tex[2];$/;"	m	struct:__anon1
texture	libsrc/SlipObject.h	/^	GLuint texture(size_t i)$/;"	f	class:SlipObject
updateCamera	libsrc/SlipGL.cpp	/^void SlipGL::updateCamera()$/;"	f	class:SlipGL
updateProjection	libsrc/SlipGL.cpp	/^void SlipGL::updateProjection()$/;"	f	class:SlipGL
vImage	libsrc/shaders/vImage.h	/^std::string vImage =$/;"	v
vPointer	libsrc/SlipObject.h	/^	Vertex *vPointer()$/;"	f	class:SlipObject
vSize	libsrc/SlipObject.h	/^	size_t vSize()$/;"	f	class:SlipObject
wipeEffect	libsrc/SlipObject.cpp	/^void SlipObject::wipeEffect()$/;"	f	class:SlipObject
zFar	libsrc/SlipGL.h	/^	float zNear, zFar;$/;"	m	class:SlipGL
zNear	libsrc/SlipGL.h	/^	float zNear, zFar;$/;"	m	class:SlipGL
zoom	libsrc/SlipGL.cpp	/^void SlipGL::zoom(float x, float y, float z)$/;"	f	class:SlipGL
~SlipObject	libsrc/SlipObject.h	/^	virtual ~SlipObject() {};$/;"	f	class:SlipObject
~SurfaceView	libsrc/SurfaceView.h	/^	~SurfaceView()$/;"	f	class:SurfaceView
